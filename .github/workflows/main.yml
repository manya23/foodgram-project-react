# .github/workflows/**main.yml**
name: Foodgram project workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        # обновление pip
        python -m pip install --upgrade pip
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r backend/api_foodgram/requirements.txt

    - name: Test with flake8 and pytest
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
        # запустить написанные разработчиком тесты
        # pytest
        

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            file: ./backend/api_foodgram/Dockerfile
            push: true
            tags: konmari/foodgram-project:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Выполняет pull образа сDockerHub
            sudo docker pull konmari/foodgram-project

            sudo docker compose stop
            sudo docker compose rm web
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> ./backend/api_foodgram/.env
            echo DB_NAME=${{ secrets.DB_NAME }} >> ./backend/api_foodgram/.env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> ./backend/api_foodgram/.env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> ./backend/api_foodgram/.env
            echo DB_HOST=${{ secrets.DB_HOST }} >> ./backend/api_foodgram/.env
            echo DB_PORT=${{ secrets.DB_PORT }} >> ./backend/api_foodgram/.env
            # остановка всех контейнеров
            sudo docker compose up --force-recreate -d
            sudo docker compose exec web python manage.py migrate
            sudo docker compose exec web python manage.py collectstatic --no-input


  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!